{"ast":null,"code":"import _classCallCheck from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/src/components/MiniCalculator.js\";\nimport React, { Component } from 'react';\n\nvar MiniCalculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MiniCalculator, _Component);\n\n  function MiniCalculator(props) {\n    var _this;\n\n    _classCallCheck(this, MiniCalculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MiniCalculator).call(this, props));\n    _this.state = {\n      idealWeight: 'Pending Calculation'\n    };\n    _this.calculateWeight = _this.calculateWeight.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MiniCalculator, [{\n    key: \"calculateWeight\",\n    value: function calculateWeight() {\n      var y = this._newServing.value;\n      var z = this._newCarbs.value;\n      var x = this._newDesiredCarbs.value;\n      var n = (y * x / z).toFixed(2);\n      this.setState({\n        idealWeight: \"\".concat(n, \"g\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Item Serving Size (in grams):\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"info-serving-size\",\n        name: \"item-serving-size\",\n        ref: function ref(input) {\n          return _this2._newServing = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Item Carbs:\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"info-carbs\",\n        name: \"item-carbs\",\n        ref: function ref(input) {\n          return _this2._newCarbs = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Desired Carbs:\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"desired-carbs\",\n        name: \"item-desired-carbs\",\n        ref: function ref(input) {\n          return _this2._newDesiredCarbs = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"form-submit-button\",\n        onClick: this.calculateWeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Calculate\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Ideal Weight: \", this.state.idealWeight)));\n    }\n  }]);\n\n  return MiniCalculator;\n}(Component);\n\nexport default MiniCalculator;","map":{"version":3,"sources":["/Users/Kristen/Documents/WebDev/Clients/carb-calculator/carb-calculator-site/carb-calculator/frontend/src/components/MiniCalculator.js"],"names":["React","Component","MiniCalculator","props","state","idealWeight","calculateWeight","bind","y","_newServing","value","z","_newCarbs","x","_newDesiredCarbs","n","toFixed","setState","input"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AALiB;AAMlB;;;;sCAEiB;AAChB,UAAIC,CAAC,GAAG,KAAKC,WAAL,CAAiBC,KAAzB;AACA,UAAIC,CAAC,GAAG,KAAKC,SAAL,CAAeF,KAAvB;AACA,UAAIG,CAAC,GAAG,KAAKC,gBAAL,CAAsBJ,KAA9B;AACA,UAAIK,CAAC,GAAG,CAAEP,CAAC,GAACK,CAAH,GAAMF,CAAP,EAAUK,OAAV,CAAkB,CAAlB,CAAR;AACA,WAAKC,QAAL,CAAe;AACZZ,QAAAA,WAAW,YAAKU,CAAL;AADC,OAAf;AAGD;;;6BAGS;AAAA;;AACR,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,mBAAxB;AAA4C,QAAA,IAAI,EAAC,mBAAjD;AAAqE,QAAA,GAAG,EAAE,aAAAG,KAAK;AAAA,iBAAI,MAAI,CAACT,WAAL,GAAmBS,KAAvB;AAAA,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,YAAxB;AAAqC,QAAA,IAAI,EAAC,YAA1C;AAAuD,QAAA,GAAG,EAAE,aAAAA,KAAK;AAAA,iBAAI,MAAI,CAACN,SAAL,GAAiBM,KAArB;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,eAAxB;AAAwC,QAAA,IAAI,EAAC,oBAA7C;AAAkE,QAAA,GAAG,EAAE,aAAAA,KAAK;AAAA,iBAAI,MAAI,CAACJ,gBAAL,GAAwBI,KAA5B;AAAA,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAE,KAAKZ,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAfF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsB,KAAKF,KAAL,CAAWC,WAAjC,CAlBF,CADF,CADF;AAwBD;;;;EA7C0BJ,S;;AAgD7B,eAAeC,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MiniCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      idealWeight: 'Pending Calculation'\n    }\n    this.calculateWeight = this.calculateWeight.bind(this);\n  }\n\n  calculateWeight() {\n    let y = this._newServing.value;\n    let z = this._newCarbs.value;\n    let x = this._newDesiredCarbs.value;\n    let n = ((y*x)/z).toFixed(2);\n    this.setState ({\n       idealWeight: `${n}g`\n     });\n  }\n\n\n  render () {\n    return (\n      <div className='content-container'>\n        <div>\n          <form>\n            <div className='form-row'>\n              <label>Item Serving Size (in grams):</label>\n              <input type='number' id='info-serving-size' name='item-serving-size' ref={input => this._newServing = input}/>\n            </div>\n            <div className='form-row'>\n              <label>Item Carbs:</label>\n              <input type='number' id='info-carbs' name='item-carbs' ref={input => this._newCarbs = input}/>\n            </div>\n            <div className='form-row'>\n              <label>Desired Carbs:</label>\n              <input type='number' id='desired-carbs' name='item-desired-carbs' ref={input => this._newDesiredCarbs = input}/>\n            </div>\n          </form>\n          <div>\n            <button className='form-submit-button' onClick={this.calculateWeight}>Calculate</button>\n          </div>\n          <p>Ideal Weight&#58; {this.state.idealWeight}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MiniCalculator;"]},"metadata":{},"sourceType":"module"}